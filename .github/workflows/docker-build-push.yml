# Ambuda workflow to build and publish docker image

name: Publish Ambuda image
env:
  AMBUDA_VERSION: v0.1
on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'main'

jobs:
  push_to_registries:
    name: Push Ambuda image to GH container registry
    runs-on: ubuntu-22.04
    permissions:
      packages: write
      contents: read
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      
      - name: GH container registry login
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch,value=v0.1-{{branch}}-{{sha}}
            type=ref,event=pr,value=pr-{{branch}}-{{sha}}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,event=push,value=v0.1-{{branch}}-{{sha}}
      
      - name: Build and push Docker images
        id: publish
        uses: docker/build-push-action@v3.2.0
        with:
          context: .
          file: build/containers/Dockerfile.final
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      
      - name: Run SQL db setup
        id: deploy
        run: docker compose -f deploy/local/docker-compose-dbsetup.yml up
        env:
          AMBUDA_IMAGE: ${{ fromJSON(steps.meta.outputs.json).tags[0] }}
          AMBUDA_HOST_IP: 127.0.0.1
          AMBUDA_HOST_PORT: 5090

      - name: Run Docker images
        id: deploy
        run: docker compose -f deploy/local/docker-compose.yml up
        env:
          AMBUDA_IMAGE: ${{ fromJSON(steps.meta.outputs.json).tags[0] }}
          AMBUDA_HOST_IP: 127.0.0.1
          AMBUDA_HOST_PORT: 5090

      - name: Check that site is running
        run: timeout 2m bash -c 'until curl --fail-with-body localhost:5090; do sleep 1; done'
        
      - name: Show logs on fail
        if: ${{ failure() }}
        run: docker compose -f deploy/local/docker-compose.yml logs
        env:
          AMBUDA_IMAGE: ${{ fromJSON(steps.meta.outputs.json).tags[0] }}
          AMBUDA_HOST_IP: 127.0.0.1
          AMBUDA_HOST_PORT: 5090
